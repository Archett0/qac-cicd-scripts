pipeline {
    agent any

    stages {
        stage('Authenticate to GCP') {
            steps {
                withCredentials([file(credentialsId: 'smr-k8s-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                        gcloud config set project mimetic-codex-460815-g8
                        gcloud config set compute/zone us-central1
                        gcloud container clusters get-credentials smr-cluster
                    '''
                }
            }
        }
        stage('Apply to GKE') {
            steps {
                dir('smr-consul') {
                    sh "kubectl --namespace=default apply -f smr-consul-deployment.yaml"
                    sh "kubectl --namespace=default apply -f smr-consul-service.yaml"
                }
                dir('smr-cloudgateway') {
                    sh "kubectl --namespace=default apply -f smr-cloudgateway-deployment.yaml"
                    sh "kubectl --namespace=default apply -f smr-cloudgateway-service.yaml"
                }
                dir('smr-listingservice') {
                    sh "kubectl --namespace=default apply -f smr-listingservice-deployment.yaml"
                    sh "kubectl --namespace=default apply -f smr-listingservice-service.yaml"
                }
                dir('smr-userservice') {
                    sh "kubectl --namespace=default apply -f smr-userservice-deployment.yaml"
                    sh "kubectl --namespace=default apply -f smr-userservice-service.yaml"
                }
            }
        }
        stage('Get Cloud Gateway Endpoint') {
            steps {
                sh "kubectl get service cloud-gateway"
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
